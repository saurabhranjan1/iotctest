openapi: 3.0.0
info:
  title: EnOcean IoT Connector API
  description: The API to manage devices for the EnOcean IoT Connector.
  version: 0.0.3
servers:
- url: https://your-iot-connector.net/api.beta/v1
  description: SwaggerHub API Auto Mocking
paths:
  /backup:
    get:
      tags:
      - Backup
      operationId: backup_get
      responses:
        "200":
          description: Dump
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
      x-openapi-router-controller: swagger_server.controllers.backup_controller
    post:
      tags:
      - Backup
      operationId: backup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "200":
          description: Import a previously executed dump. The complete storage is
            erased!
      x-openapi-router-controller: swagger_server.controllers.backup_controller
  /devices:
    get:
      tags:
      - Devices
      description: Get one entity.
      operationId: device_get
      parameters:
      - name: sourceID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnOceanSensor'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
    put:
      tags:
      - Devices
      description: Overwrite the device
      operationId: device_put
      parameters:
      - name: sourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnOceanSensor'
      responses:
        "200":
          description: Overwrite succeeded.
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
    post:
      tags:
      - Devices
      operationId: device_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnOceanSensor'
      responses:
        "200":
          description: successfully registered device
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
    delete:
      tags:
      - Devices
      description: Deletes an entry.
      operationId: device_delete
      parameters:
      - name: sourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      responses:
        "200":
          description: Delete executed.
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
  /devices/metadata/statistics/telegrams:
    get:
      tags:
      - Devices
      description: Get telegram statistics.
      operationId: device_get_metadata_statitics_telegram
      parameters:
      - name: sourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SensorTelegramStatistic'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
  /devices/telemetry/most-recent:
    get:
      tags:
      - Devices
      description: Get past telemetry. Up to 5.
      operationId: device_most_recent_telemetry_get
      parameters:
      - name: sourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnOceanTelegram'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
  /devices/signals/most-recent:
    get:
      tags:
      - Devices
      description: Get past signals. Up to 5.
      operationId: device_most_recent_signals_get
      parameters:
      - name: sourceID
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: destinationID
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: FFFFFFFF
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnOceanSignals'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.devices_controller
  /gateways:
    get:
      tags:
      - Gateways
      description: Get gateways.
      operationId: gateway_get
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Gateway'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.gateways_controller
  /gateways/metadata/statistics/telegrams:
    get:
      tags:
      - Gateways
      description: Get telegram statistics for all gateways.
      operationId: gateway_get_metadata_statitics_telegram
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GatewaysTelegramStatistic'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.gateways_controller
  /gateways/metadata/health:
    get:
      tags:
      - Gateways
      description: Get health data for all gateways.
      operationId: gateway_get_metadata_health
      responses:
        "200":
          description: response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GatewayHealth'
                x-content-type: application/json
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-openapi-router-controller: swagger_server.controllers.gateways_controller
components:
  schemas:
    EnOceanSensor:
      required:
      - eep
      - friendlyID
      - sourceEurid
      type: object
      properties:
        sourceEurid:
          pattern: "^[a-fA-F0-9]{8}$"
          type: string
          description: EnOcean ID. Length 32 bit. In hexadecimal format.
          format: uuid
        destinationEurid:
          pattern: "^[a-fA-F0-9]{8}$"
          type: string
          description: Destination ID of the communication. In most cases the Destination
            ID is broadcast - FFFFFFFF.
          format: uuid
        friendlyID:
          maxLength: 64
          type: string
          description: Given name of the device. Size limited to.
          example: Room Panel 02
        location:
          maxLength: 64
          type: string
          description: Optional - Location of the device.
          example: Level 2 / Room 221
        eep:
          pattern: "^([a-fA-F0-9]{2})-([a-fA-F0-9]{2})-([a-fA-F0-9]{2})$"
          type: string
          description: EEP used for transformation of incoming traffic
          example: A5-04-05
        activeFlag:
          type: boolean
          description: Flag to enable active processing of incomming traffic from
            this device. Shall the device not be ready at its final operating possition
            the traffic might be not representative and thus not processed.
          default: true
        slf:
          pattern: "^[a-fA-F0-9]{2}$"
          type: string
          description: Only required for encrypted communication. Security Level format.
          example: f3
        isPTM:
          type: boolean
          description: Only required for encrypted communication using PTM modules.
          default: false
        AESKey:
          pattern: "^[a-fA-F0-9]{32}$"
          type: string
          description: Only required for encrypted communication. AES Key used for
            encrypted communication.
        customTag:
          type: string
          description: Customer added description. Forwarded as reference on egress.
          default: ""
      description: Sensor device information.
      example:
        friendlyID: Room Panel 02
        eep: A5-04-05
        isPTM: false
        sourceEurid: a1b2c3d4
        destinationEurid: ffffffff
        location: Level 2 / Room 221
        slf: f3
        AESKey: 3a0c1b30b0a822a17a28fd01d77abdae
    Gateway:
      type: object
      properties:
        mac:
          pattern: "^[a-f0-9]{12}$"
          type: string
          description: MAC Address of the gateway.
        hardwareDescriptor:
          type: string
          description: Hardware description of the gateway.
        softwareVersion:
          type: string
          description: Software version string of the gateway.
        lastSeen:
          type: string
          description: Timestamp as string of the last seen time of the gateway.
      description: Device (e.g. Wifi Access Point) connected to the IoTC.
      example:
        hardwareDescriptor: hardwareDescriptor
        mac: mac
        softwareVersion: softwareVersion
        lastSeen: lastSeen
    TelegramStatistics:
      required:
      - totalTelegramCount
      type: object
      properties:
        totalTelegramCount:
          type: integer
          description: Total count of received telegrams.
        succesfullyProcessed:
          type: integer
          description: Count of succesfully processed telegrams & forwarded on egress.
        notProcessed:
          type: integer
          description: Count of not processed telegrams due to various reasons & NOT
            forwarded on egress.
        lastSeen:
          type: string
          description: Timestamp of last valid telegram from device in UTC seconds.
      example:
        lastSeen: lastSeen
        succesfullyProcessed: 6
        notProcessed: 1
        totalTelegramCount: 0
    EnOceanTelegram:
      type: object
      properties:
        egressOutput:
          type: string
      example:
        egressOutput: egressOutput
    Backup:
      required:
      - APIVersion
      - ExportDate
      type: object
      properties:
        APIVersion:
          pattern: "^([0-9]{1,4}).([0-9]{1,4}).([0-9]{1,4})$"
          type: string
          description: What API version was used to generate the export file.
        APPVersion:
          pattern: "^([0-9]{1,4}).([0-9]{1,4}).([0-9]{1,4})$"
          type: string
          description: What API version was used to generate the export file.
        ExportDate:
          type: string
          format: date-time
        Connections:
          type: array
          items:
            $ref: '#/components/schemas/EnOceanSensor'
      example:
        ExportDate: {}
        Connections:
        - friendlyID: Room Panel 02
          eep: A5-04-05
          isPTM: false
          sourceEurid: 0454c65a
          destinationEurid: ffffffff
          location: Level 2 / Room 221
          slf: f3
          AESKey: 3a0c1b30b0a822a17a28fd01d77abdae
        - friendlyID: Room Panel 02
          eep: A5-04-05
          isPTM: false
          sourceEurid: 050f2de2
          destinationEurid: ffffffff
          location: Level 2 / Room 221
          slf: ab
          AESKey: 79afcbc5b288fb2c6edf1ffd47b590af
        APPVersion: 0.0.1
        APIVersion: 0.0.1
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: code
        message: message
    SensorTelegramStatistic:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/TelegramStatistics'
        device:
          $ref: '#/components/schemas/EnOceanSensor'
      description: Device and telegram statistic reference.
      example:
        stats:
          lastSeen: lastSeen
          succesfullyProcessed: 6
          notProcessed: 1
          totalTelegramCount: 0
        device:
          friendlyID: Room Panel 02
          eep: A5-04-05
          isPTM: false
          sourceEurid: a1b2c3d4
          destinationEurid: ffffffff
          location: Level 2 / Room 221
          slf: f3
          AESKey: 3a0c1b30b0a822a17a28fd01d77abdae
    EnOceanSignals:
      type: object
      properties:
        signalKey:
          type: string
          description: Signal Key as defined be the EnOcean Alliance
        signalMeaning:
          type: string
          description: Signal Meaning as defined be the EnOcean Alliance
        recentSignals:
          type: array
          items:
            $ref: '#/components/schemas/EnOceanTelegram'
      description: Most recent signals & raw telegrams.
      example:
        signalMeaning: signalMeaning
        recentSignals:
        - egressOutput: egressOutput
        - egressOutput: egressOutput
        signalKey: signalKey
    USBHealth:
      type: object
      properties:
        usb_health:
          type: string
          description: Health info value
        usb_identifier:
          type: string
          description: USB Identifier
      example:
        usb_health: usb_health
        usb_identifier: usb_identifier
    GatewaysTelegramStatistic:
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/TelegramStatistics'
        device:
          $ref: '#/components/schemas/Gateway'
      description: Device and telegram statistic reference.
      example:
        stats:
          lastSeen: lastSeen
          succesfullyProcessed: 6
          notProcessed: 1
          totalTelegramCount: 0
        device:
          hardwareDescriptor: hardwareDescriptor
          mac: mac
          softwareVersion: softwareVersion
    GatewayHealth:
      type: object
      properties:
        health:
          type: object
          properties:
            gateway_info:
              $ref: '#/components/schemas/Gateway'
            stats:
              type: object
              properties:
                timestamp: 
                  type: string
                  description: Timestamp
              example:
                timestamp: timestamp
            usb_info:
              type: array
              items:
                $ref: '#/components/schemas/USBHealth'

        